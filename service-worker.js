if(!self.define){const e=e=>{"require"!==e&&(e+=".js");let s=Promise.resolve();return a[e]||(s=new Promise(async s=>{if("document"in self){const a=document.createElement("script");a.src=e,document.head.appendChild(a),a.onload=s}else importScripts(e),s()})),s.then(()=>{if(!a[e])throw new Error(`Module ${e} didn’t register its module`);return a[e]})},s=(s,a)=>{Promise.all(s.map(e)).then(e=>a(1===e.length?e[0]:e))},a={require:Promise.resolve(s)};self.define=(s,r,i)=>{a[s]||(a[s]=Promise.resolve().then(()=>{let a={};const t={uri:location.origin+s.slice(1)};return Promise.all(r.map(s=>{switch(s){case"exports":return a;case"module":return t;default:return e(s)}})).then(e=>{const s=i(...e);return a.default||(a.default=s),a})}))}}define("./service-worker.js",["./workbox-ec4d79a7"],(function(e){"use strict";self.addEventListener("message",e=>{e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()}),e.precacheAndRoute([{url:"article/index.html",revision:"c77126ee5c21de56a673567040431647"},{url:"assets/css/0.styles.beeb4526.css",revision:"8927d7180bc177d24793b22e609a97ff"},{url:"assets/img/homeImage.5ae9de9e.jpg",revision:"5ae9de9e15120d94e9892d0c15da9896"},{url:"assets/img/search.83621669.svg",revision:"83621669651b9a3d4bf64d1a670ad856"},{url:"assets/js/10.f6d1c724.js",revision:"9b1f7172bada4c273d2596f834843b0b"},{url:"assets/js/app.a5e96350.js",revision:"701a4277087a6786bfc0bc0068d98168"},{url:"assets/js/layout-BlogEntry.6ff0a429.js",revision:"6292adcb3993a64fb0515d22886b6816"},{url:"assets/js/layout-NotFound.f1daf84b.js",revision:"27a9f922fa989cc7ebdab7f845f2e457"},{url:"assets/js/page-effect.17adee72.js",revision:"b07adbf89a5eb75d793db0891a165bfc"},{url:"assets/js/page-handlers 代理方法.92bd4120.js",revision:"0afe8eac6250e3fd30c658747144b3d4"},{url:"assets/js/page-reactive.2382e80b.js",revision:"0ad75809e4e884d5d345fac259e54ac3"},{url:"assets/js/page-首页.c0a3fce0.js",revision:"0ab59497a260b3a67cb2b695fe770a4e"},{url:"assets/js/vendors~layout-BlogEntry~layout-Layout.a1669468.js",revision:"03cf938005d57d6eda4e64365817c48a"},{url:"assets/js/vendors~layout-Layout.48ba2620.js",revision:"fab22266c44b17fa95392f34d1bb23d9"},{url:"category/index.html",revision:"53fd4ee16c5939fdd4b68a0cd4c556b0"},{url:"index.html",revision:"86ec811e21a332b57871be8f308ea649"},{url:"tag/index.html",revision:"59f049a02f6facae554a1a69094b9e0b"},{url:"views/vue-next/effect.html",revision:"29bc780382aca89a92f795b6ee2ec006"},{url:"views/vue-next/handler.html",revision:"c2f2b0e69432045e6298aab11d4611e0"},{url:"views/vue-next/reactive.html",revision:"f02926095106d2a1c983d18128418220"},{url:"xuan200.png",revision:"337c9efc9e84b65cfe4b29fe0d909ab4"},{url:"xuan500.png",revision:"7afeb05055b35382431eeee9f3953d56"}],{})}));
//# sourceMappingURL=service-worker.js.map
addEventListener('message', (event) => {
  const replyPort = event.ports[0];
  const message = event.data;
  if (replyPort && message && message.type === 'skip-waiting')
    event.waitUntil(
      self.skipWaiting().then(
        () => replyPort.postMessage({ error: null }),
        (error) => replyPort.postMessage({ error })
      )
    );
});
